import{r as e,o as t,c as a,u as n,a as o,w as l,b as s,d as r,e as i,F as d,f as c,t as p,g as u,h,v as m,i as f,j as g,k as y,l as v,I as b}from"./vendor.916e916d.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(a){const n=new URL(e,location),o=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((a,l)=>{const s=new URL(e,n);if(self[t].moduleMap[s])return a(self[t].moduleMap[s]);const r=new Blob([`import * as m from '${s}';`,`${t}.moduleMap['${s}']=m;`],{type:"text/javascript"}),i=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(r),onerror(){l(new Error(`Failed to import: ${e}`)),o(i)},onload(){a(self[t].moduleMap[s]),o(i)}});document.head.appendChild(i)})),self[t].moduleMap={}}}("assets/");const x={name:"HelloWorld",props:{msg:String},data:()=>({count:0})};x.render=function(n,o,l,s,r,i){const d=e("router-view");return t(),a(d)};const k={setup(e,t){const a=n(),l=o("/compose");a.beforeEach(((e,t)=>{console.log(e),l.value=e.meta.menuIndex||"/compose"}));return{activeKey:l,onSelect:(e,t)=>{l.value=e}}}},w=r("运动合成"),S=r("CSS3D动画"),C=r("SVG动画");k.render=function(n,o,r,i,d,c){const p=e("el-menu-item"),u=e("el-menu");return t(),a(u,{"default-active":i.activeKey,onSelect:i.onSelect,router:""},{default:l((()=>[s(p,{index:"/compose"},{title:l((()=>[w])),_:1}),s(p,{index:"/css3d"},{title:l((()=>[S])),_:1}),s(p,{index:"/svg"},{title:l((()=>[C])),_:1})])),_:1},8,["default-active","onSelect"])};const _={name:"App",components:{HelloWorld:x,Menu:k}},V={class:"container"};_.render=function(n,o,l,r,i,d){const c=e("Menu"),p=e("HelloWorld");return t(),a("div",V,[s(c,{class:"menu"}),s(p,{class:"content"})])};const L=[{prop:"animation-name",des:"规定需要绑定到选择器的 keyframe 名称。",defaultValue:"none",values:["none","keyframename"]},{prop:"animation-duration",des:"规定完成动画所花费的时间，以秒或毫秒计。",defaultValue:"0",values:["time(ms)"]},{prop:"animation-timing-function",des:"规定动画的速度曲线。",defaultValue:"ease",values:["ease","linear","ease-in","ease-out","ease-in-out","cubic-bezier(n,n,n,n)"]},{prop:"animation-delay",des:"规定在动画开始之前的延迟。",defaultValue:"0",values:["time(ms)"]},{prop:"animation-iteration-count",des:"规定动画应该播放的次数。",defaultValue:"1",values:["n","infinite"]},{prop:"animation-direction",des:"规定是否应该轮流反向播放动画。",defaultValue:"normal",values:["normal","alternate"]},{prop:"animation-play-state",des:"动画的播放状态。",defaultValue:"running",values:["running","paused"]},{prop:"animation-fill-mode",des:"规定动画在播放之前或之后,其动画效果是否可见",defaultValue:"none",values:["none","forwards","backwards","both"]}],X={setup(){const e=i({pool:[1,2,3,4,5,6,7,8],activePool:[]}),t=i(L),a=o(0),n=o(!1),l=o(!1),s=o("./assets/smile.3984d988.png");return{cache:e,count:a,animationStart:()=>{const t=e.pool.pop();t&&(e.activePool.unshift(t),a.value++)},animationEnd:()=>{const t=e.activePool.pop();t&&e.pool.unshift(t)},rotate:n,rotateReverse:l,tableData:t,laugh:s}}},z={class:"card"},E=s("h3",null,"动画基本属性",-1),M={class:"card",style:{"padding-bottom":"400px"}},Y=s("h3",null,"曲线运动的合成",-1),P=s("p",null," 通过运动的合成可以实现元素的复杂运动，比如曲线运动。 CSS运动的合成与物理学中一个物体运动状态的合成同理，比如一个物体的抛物线曲线的形成可以看做是是它的水平方向的运动状态和垂直方向的运动状态合成的结果。 CSS运动合成的核心就是在需要添加运动效果的元素外层加上一个包裹层，该元素与包裹层元素分别加上不同的运动状态，以达到运动合成的目的。 ",-1),R=r("就问你这个图是否眼熟 "),U=s("br",null,null,-1),D=s("p",null,"抛物线案例",-1),N=s("h3",{style:{"margin-top":"20px"}},"效果",-1),G=s("p",null," 点击➕会有小球的运动轨迹显示 ",-1),H={class:"relative"},j=s("i",{class:"el-icon-goods"},null,-1),A=s("iframe",{height:"500",style:{width:"100%","margin-top":"450px"},scrolling:"no",title:"compose",src:"https://codepen.io/toyshome/embed/rNMMLeQ?height=265&theme-id=light&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},"\n            See the Pen <a href='https://codepen.io/toyshome/pen/rNMMLeQ'>compose</a> by wangliu\n            (<a href='https://codepen.io/toyshome'>@toyshome</a>) on <a href='https://codepen.io'>CodePen</a>.\n            ",-1),B=s("br",null,null,-1),O=s("p",null,"旋转抵消案例",-1),W=r("rotate-animation"),q=r("rotate-reverse-animation"),I=s("iframe",{height:"500",style:{width:"100%","margin-top":"400px"},scrolling:"no",title:"rotate",src:"https://codepen.io/toyshome/embed/wvzopeX?height=265&theme-id=light&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},"\n            See the Pen <a href='https://codepen.io/toyshome/pen/wvzopeX'>rotate</a> by wangliu\n            (<a href='https://codepen.io/toyshome'>@toyshome</a>) on <a href='https://codepen.io'>CodePen</a>.\n            ",-1);X.render=function(n,o,i,h,m,f){const g=e("el-table-column"),y=e("el-tag"),v=e("el-space"),b=e("el-table"),x=e("el-image"),k=e("el-badge"),w=e("el-checkbox"),S=e("el-col"),C=e("el-row");return t(),a("div",null,[s("div",z,[E,s(b,{data:h.tableData,stripe:"",border:""},{default:l((()=>[s(g,{prop:"prop",label:"属性",width:"200"}),s(g,{prop:"des",label:"描述"}),s(g,{prop:"defaultValue",label:"默认值",width:"120"}),s(g,{prop:"values",label:"可取值"},{default:l((e=>[s(v,{wrap:""},{default:l((()=>[(t(!0),a(d,null,c(e.row.values,(e=>(t(),a(y,{key:e,style:{"font-size":"16px"}},{default:l((()=>[r(p(e),1)])),_:2},1024)))),128))])),_:2},1024)])),_:1})])),_:1},8,["data"])]),s("div",M,[Y,P,s("div",null,[s("p",null,[R,s(x,{src:h.laugh,style:{width:"80px"}},null,8,["src"])]),s(x,{src:"http://5b0988e595225.cdn.sohucs.com/images/20190116/16779fa9b22e4ab2b5d3741133f92ac9.png",fit:"contain"})]),U,D,N,G,s("div",H,[s("i",{class:"el-icon-circle-plus",name:"add",onClick:o[1]||(o[1]=(...e)=>h.animationStart&&h.animationStart(...e)),style:{"font-size":"30px",cursor:"pointer"}}),s(k,{value:h.count,class:"cart"},{default:l((()=>[j])),_:1},8,["value"]),(t(!0),a(d,null,c(h.cache.activePool,(e=>(t(),a("div",{class:"parabola-x",key:e},[s("div",{class:"parabola-y",onAnimationEnd:o[2]||(o[2]=u(((...e)=>h.animationEnd&&h.animationEnd(...e)),["stop"]))},null,32)])))),128))]),A,B,O,s(C,{gutter:20},{default:l((()=>[s(S,null,{default:l((()=>[s(w,{modelValue:h.rotate,"onUpdate:modelValue":o[3]||(o[3]=e=>h.rotate=e)},{default:l((()=>[W])),_:1},8,["modelValue"])])),_:1}),s(S,null,{default:l((()=>[s(w,{modelValue:h.rotateReverse,"onUpdate:modelValue":o[4]||(o[4]=e=>h.rotateReverse=e)},{default:l((()=>[q])),_:1},8,["modelValue"])])),_:1})])),_:1}),s("div",{class:["rotate",{"rotate-animation":h.rotate}]},[s("div",{class:["inner",{"rotate-reverse-animation":h.rotateReverse}]},"正",2)],2),I])])};const F={setup(){const e=o(0),t=o("1"),a=o("./assets/zuobiao.27b74acc.png"),n=o(!1),l=i({checked:[],classList:["back","left","right","top","bottom"]});return{persp:e,imgSrc:a,paused:n,onChange:t=>e.value=t,checked:l,radio:t,radioChange:()=>{l.checked=[]}}}},Q={class:"card"},T=s("h3",null,"CSS中的3d坐标系",-1),$=s("p",null,"- Z轴正方向垂直屏幕向外",-1),Z=s("p",null,"- 坐标系并非固定不变的，比如某个元素进行了沿x轴90度的旋转，那么该元素的对应坐标系也会跟着同样的方向旋转90度",-1),K=s("p",null,[r("- 开启3d视图需要CSS属性"),s("span",{class:"hl"},"transform-style: preserve-3d;")],-1),J=r("旋转+平移"),ee=r("基点修改+旋转"),te=r("上"),ae=r("左"),ne=r("下"),oe=r("右"),le=r("后"),se=r("暂停"),re=s("div",{class:"cube"},null,-1),ie=s("iframe",{height:"500",style:{width:"100%"},scrolling:"no",title:"css3d",src:"https://codepen.io/toyshome/embed/xxEEOMG?height=265&theme-id=light&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},"\n            See the Pen <a href='https://codepen.io/toyshome/pen/xxEEOMG'>css3d</a> by wangliu\n            (<a href='https://codepen.io/toyshome'>@toyshome</a>) on <a href='https://codepen.io'>CodePen</a>.\n            ",-1);F.render=function(n,o,r,i,u,h){const m=e("el-radio"),f=e("el-radio-group"),g=e("el-checkbox"),y=e("el-checkbox-group"),v=e("el-col"),b=e("el-row");return t(),a("div",null,[s("div",Q,[T,$,Z,K,s("img",{src:i.imgSrc},null,8,["src"]),s(b,{type:"flex",justify:"space-between"},{default:l((()=>[s(v,{span:"10"},{default:l((()=>[s(f,{modelValue:i.radio,"onUpdate:modelValue":o[1]||(o[1]=e=>i.radio=e),direction:"horizontal",onChange:i.radioChange},{default:l((()=>[s(m,{label:"1"},{default:l((()=>[J])),_:1}),s(m,{label:"2"},{default:l((()=>[ee])),_:1})])),_:1},8,["modelValue","onChange"]),s(y,{modelValue:i.checked.checked,"onUpdate:modelValue":o[2]||(o[2]=e=>i.checked.checked=e),direction:"horizontal",style:{margin:"20px 0"}},{default:l((()=>[s(g,{label:"top"},{default:l((()=>[te])),_:1}),s(g,{label:"left"},{default:l((()=>[ae])),_:1}),s(g,{label:"bottom"},{default:l((()=>[ne])),_:1}),s(g,{label:"right"},{default:l((()=>[oe])),_:1}),s(g,{label:"back"},{default:l((()=>[le])),_:1}),s(g,{label:"paused"},{default:l((()=>[se])),_:1})])),_:1},8,["modelValue"]),s("div",{class:{"three-dimensional-animate":i.checked.checked.includes(""),"three-dimensional":!0}},[re,(t(!0),a(d,null,c(i.checked.classList,(e=>(t(),a("div",{key:e,class:{cube:!0,[e]:e,[e+"-animation"+(1==i.radio?"":"_og")]:i.checked.checked.includes(e),paused:i.checked.checked.includes("paused")}},null,2)))),128))],2)])),_:1}),s(v,{span:"13"},{default:l((()=>[1==i.radio?(t(),a("code",{key:0,textContent:p("// 初始状态立方体6个面重合叠加在一个平面\n.cube {\n    width: 200px;\n    height: 200px;\n    position: absolute;\n    opacity: 0.7;\n}\n\n// 展开上面的平面\n.top-animation {\n    animation: top 3s linear forwards;\n}\n// 方式一：通过旋转、平移到对应的面，此处以上面的平面为例\n@keyframes top {\n    33% {\n        transform: rotateX(90deg)\n    }\n\n    66% {\n        transform: rotateX(90deg) translate3d(0, -100px, 0);\n    }\n\n    to {\n        transform: rotateX(90deg) translate3d(0, -100px, 100px);\n    }\n}\n")},null,8,["textContent"])):(t(),a("code",{key:1,textContent:p("// 初始状态立方体6个面重合叠加在一个平面\n.cube {\n    width: 200px;\n    height: 200px;\n    position: absolute;\n    opacity: 0.7;\n}\n\n// 展开上面的平面\n.top-animation {\n    transform-origin: center 0;\n    animation: top 3s linear forwards;\n}\n// 方式二：通过修改tranfrom-origin再旋转，此处以上面的平面为例\n@keyframes top {\n    to {\n        transform: rotateX(90deg);\n    }\n}\n")},null,8,["textContent"]))])),_:1})])),_:1}),ie])])};const de={setup:()=>({dasharray:o(""),dashoffset:o("")})},ce={class:"card"},pe=s("h3",null,"SVG 动画",-1),ue=s("p",null,"SVG有一些预定义的形状元素，可被开发者使用和操作",-1),he=s("p",null,"🌰：画一个矩形",-1),me=s("svg",null,[s("rect",{width:"300",height:"100",fill:"#000"})],-1),fe=s("p",null,"<path> 标签用来定义路径, 路径具体是怎么绘制的又由d属性控制，d属性包含以下指令：",-1),ge=s("p",null,"下面展示画一个三角形(不使用预定义的三角形元素)",-1),ye={class:"hl"},ve=s("p",null," d属性中每一个字母代表一个指令，后面跟着的数字代表指令的参数，指令的分割也是以字母为基准的",-1),be=s("p",null,' d="M150 30 L250 200 H50 z" 可以分为4个指令:',-1),xe=s("p",null,"① M150 30: 移动到坐标(150,30)处",-1),ke=s("p",null,"② L250 200: 从上一个坐标点画路径到坐标(250, 200)",-1),we=s("p",null,"③ H50: 从上一个坐标点水平画到X坐标为5，Y保持不变的坐标处",-1),Se=s("p",null,"④ Z: 闭合路径，即首尾相连",-1),Ce=s("svg",{width:"1000",height:"250"},[s("text",{stroke:"red",x:"130",y:"20"},"(150, 30)"),s("text",{stroke:"red",x:"230",y:"220"},"(250, 200)"),s("text",{stroke:"red",x:"20",y:"220"},"(50, 200)"),s("path",{stroke:"#000000","stroke-width":"5","stroke-linecap":"round",fill:"transparent",class:"path1",d:"M150 30 L250 200 H50 z"})],-1),_e=f('<h3>SVG路径与CSS</h3><p>让静态的SVG路径元素动起来，我们首先要利用SVG的两个属性：<span class="hl">stroke-dasharray</span> 和 <span class="hl">stroke-dashoffset</span></p><p><span class="hl">stroke-dasharray:</span></p><p style="color:#e4393c;">stroke-dasharray为一个参数时： 其实是表示虚线长度和每段虚线之间的间距</p><p>如：stroke-dasharray = &#39;10&#39; 表示：虚线长10，间距10，然后重复 虚线长10，间距10</p><p style="color:#e4393c;">两个参数或者多个参数时：一个表示长度，一个表示间距</p><p>如：stroke-dasharray = &#39;10, 5&#39; 表示：虚线长10，间距5，然后重复 虚线长10，间距5</p><p>如：stroke-dasharray = &#39;20, 10, 5&#39; 表示：虚线长20，间距10，虚线长5，接着是间距20，虚线10，间距5，之后开始如此循环</p><div><img src="https://pic3.zhimg.com/80/v2-e7241a8962fee8e1e344faa248cade72_1440w.jpg" style="width:600px;"></div><p><span class="hl">stroke-dashoffset：</span></p><p>这个属性是相对于起始点的偏移，正数偏移x值的时候，相当于往左移动了x个长度单位，负数偏移x的时候，相当于往右移动了x个长度单位。</p><p>需要注意的是，不管偏移的方向是哪边，要记得dasharray 是循环的，也就是 虚线-间隔-虚线-间隔。</p><p>这个属性要搭配stroke-dashoffset才能看得出来效果，非虚线的话，是无法看出偏移的。</p>',13),Ve=s("span",null,"stroke-dasharray:",-1),Le=s("span",null,"stroke-dashoffset:",-1),Xe={width:"1000px",height:"30px"},ze=s("iframe",{height:"500",style:{width:"100%"},scrolling:"no",title:"BaLLLWq",src:"https://codepen.io/toyshome/embed/BaLLLWq?height=265&theme-id=light&default-tab=html,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},"\n            See the Pen <a href='https://codepen.io/toyshome/pen/BaLLLWq'>BaLLLWq</a> by wangliu\n            (<a href='https://codepen.io/toyshome'>@toyshome</a>) on <a href='https://codepen.io'>CodePen</a>.\n            ",-1);de.render=function(e,n,o,l,r,i){return t(),a("div",null,[s("div",ce,[pe,ue,s("code",{textContent:p("矩形 <rect>\n圆形 <circle>\n椭圆 <ellipse>\n线 <line>\n折线 <polyline>\n多边形 <polygon>\n路径 <path>")},null,8,["textContent"]),he,s("code",{textContent:p('<svg>\n    <rect width="300" height="100" fill="#000"/>\n</svg>')},null,8,["textContent"]),me,fe,s("code",{textContent:p("M = moveto(M X,Y) ：将画笔移动到指定的坐标位置\nL = lineto(L X,Y) ：画直线到指定的坐标位置\nH = horizontal lineto(H X)：画水平线到指定的X坐标位置\nV = vertical lineto(V Y)：画垂直线到指定的Y坐标位置\nC = curveto(C X1,Y1,X2,Y2,ENDX,ENDY)：三次贝赛曲线\nS = smooth curveto(S X2,Y2,ENDX,ENDY)：平滑曲率\nQ = quadratic Belzier curve(Q X,Y,ENDX,ENDY)：二次贝赛曲线\nT = smooth quadratic Belzier curveto(T ENDX,ENDY)：映射\nA = elliptical Arc(A RX,RY,XROTATION,FLAG1,FLAG2,X,Y)：弧线\nZ = closepath()：关闭路径")},null,8,["textContent"]),ge,s("div",ye,[s("code",{textContent:p('<svg width="1000" height="250">\n    <path stroke="#000000" stroke-width="5" stroke-linecap="round" fill="transparent" d="M150 30 L250 200 H50 z"></path>\n</svg>')},null,8,["textContent"])]),ve,be,xe,ke,we,Se,Ce,_e,s("p",null,[Ve,h(s("input",{type:"text","onUpdate:modelValue":n[1]||(n[1]=e=>l.dasharray=e),onChange:n[2]||(n[2]=e=>l.dasharray.value===e)},null,544),[[m,l.dasharray]]),Le,h(s("input",{type:"text","onUpdate:modelValue":n[3]||(n[3]=e=>l.dashoffset=e),onChange:n[4]||(n[4]=e=>l.dashoffset.value===e)},null,544),[[m,l.dashoffset]])]),(t(),a("svg",Xe,[s("line",{x1:"0",y1:"0",x2:"500",y2:"0",stroke:"#000","stroke-width":"20","stroke-dasharray":l.dasharray,"stroke-dashoffset":l.dashoffset},null,8,["stroke-dasharray","stroke-dashoffset"])])),ze])])};const Ee=[{path:"/",redirect:"/compose"},{path:"/compose",component:X,meta:{menuIndex:"/compose"}},{path:"/css3d",component:F,meta:{menuIndex:"/css3d"}},{path:"/svg",component:de,meta:{menuIndex:"/svg"}}],Me=g({history:y(),routes:Ee}),Ye=v(_);Ye.use(b),Ye.use(Me),Ye.mount("#app");
